{
    "project-settings": {
        "code-owner": "NewCo Incorporated",
        "bundle-path": "target/generated-sources/src/main/java",
        "apps-path": "target/generated-sources/ui.apps/src/main/content/jcr_root/apps",
        "component-path": "newco/components",
        "model-interface-pkg": "com.newco.aem.base.core.models",
        "model-impl-pkg": "com.newco.aem.base.core.models.impl"
    },
    "name": "demo-comp",
    "title": "Demo Component",
    "group": "NewCo Base",
    "type": "content",
    "options": {
        "js": true,
        "jstxt": true,
        "css": true,
        "csstxt": true,
        "html": true,
        "slingmodel": true,
        "content-exporter": false,
        "group-fields-by-name": false,
        "model-adaptables": [
            "request"
        ],
        "generic-javadoc": false,
        "editor-config": {
            "cq:editConfig": {
                "cq:isContainer": true,
                "cq:actions": [
                    "edit",
                    "delete"
                ],
                "cq:listeners": {
                    "afterchildinsert": "REFRESH_PAGE",
                    "afterdelete": "REFRESH_PAGE",
                    "afteredit": "REFRESH_PAGE",
                    "afterinsert": "REFRESH_PAGE"
                }
            },
            "cq:childEditConfig": {
                "cq:isContainer": true,
                "cq:actions": [
                    "edit",
                    "delete"
                ],
                "cq:listeners": {
                    "afterchildinsert": "REFRESH_PAGE",
                    "afterdelete": "REFRESH_PAGE",
                    "afteredit": "REFRESH_PAGE",
                    "afterinsert": "REFRESH_PAGE"
                }
            }
        },
        "properties": [
            {
                "field": "textfieldTest",
                "description": "Adds a fieldDescription tooltip",
                "javadoc": "Returns a text value tooltip used somewhere in the component",
                "type": "textfield",
                "label": "Textfield Test",
                "json-expose": true,
                "attributes": {}
            },
            {
                "field": "checkTest",
                "type": "checkbox",
                "json-expose": true,
                "attributes": {
                    "value": "{Boolean}true",
                    "text": "Checkbox Test Successful"
                },
                "template": {
                    "html": {
                        "content": "\t<p>$${${sightly}Model.@{field} ? '@{attributes.text}' : 'Checkbox Test Failed'}</p>"
                    }
                }
            },
            {
                "field": "pathfieldTest",
                "type": "pathfield",
                "label": "Pathfield Test",
                "json-expose": true,
                "attributes": {
                    "rootPath": "/content"
                }
            },
            {
                "field": "textareaTest",
                "type": "textarea",
                "label": "Textarea Test",
                "json-expose": true,
                "attributes": {}
            },
            {
                "field": "dateTest",
                "description": "Context tooltip for authors.",
                "type": "datepicker",
                "json-expose": true,
                "label": "Select Date",
                "attributes": {
                    "displayedFormat": "MM/DD/YYYY"
                }
            },
            {
                "field": "selectTest",
                "type": "select",
                "label": "Select Test",
                "json-property": "selection",
                "json-expose": true,
                "attributes": {
                    "defaultValue": "opt1",
                    "value": "opt1"
                },
                "datasource": {
                    "sling:resource...": "some/resource/path"
                },
                "items": [
                    {
                        "field": "option1",
                        "attributes": {
                            "selected": "true",
                            "text": "Option 1",
                            "value": "opt1"
                        }
                    },
                    {
                        "field": "option2",
                        "attributes": {
                            "text": "Option 2",
                            "value": "opt2"
                        }
                    }
                ]
            },
            {
                "field": "radioTest",
                "type": "radiogroup",
                "label": "Radio Test",
                "json-expose": true,
                "attributes": {
                    "vertical": "{Boolean}false"
                },
                "items": [
                    {
                        "field": "radio1",
                        "type": "radio",
                        "attributes": {
                            "checked": "{Boolean}true",
                            "name": "radioTest",
                            "text": "Radio 1",
                            "value": "rad1"
                        }
                    },
                    {
                        "field": "radio2",
                        "type": "radio",
                        "attributes": {
                            "checked": "{Boolean}true",
                            "name": "radioTest",
                            "text": "Radio 2",
                            "value": "rad2"
                        }
                    }
                ]
            },
            {
                "field": "switchTest",
                "type": "switch",
                "label": "Switch value?",
                "json-expose": true,
                "attributes": {
                    "checked": "{Boolean}true",
                    "selected": "{Boolean}true",
                    "value": "{Boolean}true"
                }
            },
            {
                "field": "hiddenTest",
                "type": "hidden",
                "attributes": {
                    "value": "hidden value"
                },
                "template": {
                    "html": {
                        "_comment_": "Template variables (@{...}) in values below means relative replacement to \"template\" parent path",
                        "content": "\t<p>Hidden Field (@{field}): $${${sightly}Model.@{field}}</p>"
                    }
                }
            },
            {
                "field": "numberfieldTest",
                "type": "numberfield",
                "label": "Numberfield Test",
                "json-expose": true,
                "attributes": {
                    "max": "{Double}20",
                    "min": "{Double}0",
                    "step": "1",
                    "value": "{Long}20"
                }
            },
            {
                "field": "imageTest",
                "type": "image",
                "label": "Image Test",
                "json-expose": true
            },
            {
                "field": "colors",
                "type": "multifield",
                "label": "Colors",
                "json-expose": true,
                "items": [
                    {
                        "type": "textfield",
                        "label": "Color"
                    }
                ]
            },
            {
                "field": "links",
                "type": "multifield",
                "model-name": "DemoLink",
                "use-existing-model": false,
                "label": "Links",
                "json-expose": true,
                "items": [
                    {
                        "field": "path",
                        "type": "pathfield",
                        "label": "Path",
                        "description": "Path to the page",
                        "json-expose": true
                    },
                    {
                        "field": "label",
                        "type": "textfield",
                        "label": "Label",
                        "description": "Label to display on the link",
                        "json-expose": true
                    }
                ],
                "template": {
                    "html": {
                        "_comment_": "Template variables (@{...}) in values below means relative replacement to \"template\" parent path",
                        "content": "\t<div data-sly-list=\"$${${sightly}Model.@{field}}\">\n\t\t<p>@{items[0].label}: ${item.path}</p>\n\t\t<p>@{items[1].label}: ${item.label}</p>\n\t</div>"
                    }
                }
            },
            {
                "field": "otherRichtextTest",
                "type": "cq/gui/components/authoring/dialog/richtext",
                "model-name": "org.w3c.dom.html.HTMLElement",
                "label": "Richtext",
                "use-existing-model": true,
                "json-expose": true,
                "attributes": {
                    "cls": "rte-demo",
                    "externalStyleSheets": "[]",
                    "inheritFrom": "",
                    "useFixedInlineToolbar": "{Boolean}true"
                },
                "template": {
                    "html": {
                        "_comment_": "Template variables (@{...}) in values below means relative replacement to \"template\" parent path",
                        "content": "\t<p>@{label}: $${${sightly}Model.@{field} @ context=\"html\"}</p>"
                    }
                }
            },
            {
                "field": "hiddenMultifield",
                "type": "hidden-multifield",
                "model-name": "MyTextModel",
                "javadoc": "Multifield not displayed in component dialog and can be used for parsys or other child components",
                "use-existing-model": false,
                "json-expose": true,
                "attributes": {},
                "items": [
                    {
                        "field": "text",
                        "type": "hidden",
                        "label": "TextItemTest",
                        "attributes": {
                            "value": "hidden value"
                        },
                        "description": "Interface type for used Parsys Components",
                        "json-expose": true
                    }
                ],
                "template": {
                    "html": {
                        "_comment_": "Template variables (@{...}) in values below means relative replacement to \"template\" parent path",
                        "content": "\t<div data-sly-list=\"$${${sightly}Model.@{field}}\">\n\t\t<p>${item.text}</p>\n\t</div>"
                    }
                }
            },
            {
                "field": "containerSelectTest",
                "type": "select",
                "label": "Container Select Test",
                "attributes": {
                    "granite:class": "cq-dialog-dropdown-showhide"
                },
                "granite:data": {
                    "cq-dialog-dropdown-showhide-target": ".containerTest-showhide-target"
                },
                "items": [
                    {
                        "field": "containerOption1",
                        "attributes": {
                            "text": "Container Option 1",
                            "value": "containerOption1"
                        }
                    },
                    {
                        "field": "containerOption2",
                        "attributes": {
                            "text": "Container Option 2",
                            "value": "containerOption2"
                        }
                    }
                ]
            },
            {
                "field": "containerOption1",
                "type": "container",
                "attributes": {
                    "granite:class": "containerTest-showhide-target"
                },
                "granite:data": {
                    "showhidetargetvalue": "containerOption1"
                },
                "items": [
                    {
                        "field": "container1Colors",
                        "type": "multifield",
                        "label": "ContainerColors",
                        "json-expose": true,
                        "items": [
                            {
                                "type": "textfield",
                                "label": "Color"
                            }
                        ]
                    }
                ]
            },
            {
                "field": "containerOption2",
                "type": "container",
                "attributes": {
                    "granite:class": "containerTest-showhide-target"
                },
                "granite:data": {
                    "showhidetargetvalue": "containerOption2"
                },
                "items": [
                    {
                        "field": "jcrTitel",
                        "name": "jcr:titel",
                        "type": "textfield",
                        "label": "Titel read only",
                        "json-expose": true,
                        "attributes": {
                            "disabled": "{Boolean}true"
                        }
                    },
                    {
                        "field": "container1Colors",
                        "use-existing-field": true,
                        "type": "multifield",
                        "label": "ContainerColors",
                        "json-expose": true,
                        "items": [
                            {
                                "type": "textfield",
                                "label": "Color"
                            }
                        ]
                    }
                ]
            },
            {
                "field": "otherFieldLikeTab",
                "type": "container",
                "use-existing-field": true,
                "json-expose": false,
                "attributes": {
                    "granite:class": "texttype-showhide-target texttype-container hide",
                    "sling:resourceType": "granite/ui/components/coral/foundation/tabs"
                },
                "items": [
                    {
                        "type": "textfield",
                        "label": "ColorContainer"
                    }
                ]
            }
        ],
        "properties-shared": [
            {
                "field": "sharedTextfieldTest",
                "type": "textfield",
                "label": "Shared Textfield Test",
                "json-expose": true
            }
        ],
        "properties-global": [
            {
                "field": "globalTextfieldTest",
                "type": "textfield",
                "label": "Global Textfield Test",
                "json-expose": true
            }
        ]
    },
    "template-definitions": {
        "copy-patterns": [
            {
                "_comment_": "Following copy patterns are used to copy targetAttributes (@...) to related baseJsonPath (https://github.com/json-path/JsonPath)"
            },
            {
                "_comment_": "Set component templates in the data-config.json tree. Using attributes see: <{sightly} ${template-html-attributes}>${template-html-content}</${sightly}>",
                "baseJsonPath": "$.options",
                "targetAttributes": {
                    "@.template.html.component": "<!--/* Generated with data-config \"template-definitions\" */-->\n${template-html-content}",
                    "@.template.html.bottom": "<sly data-sly-use.templates=\"core/wcm/components/commons/v1/templates.html\"\n\tdata-sly-call=\"$${templates.placeholder @ isEmpty = !configured}\" />"
                }
            },
            {
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][*][?(!(@.attributes.showOnCreate))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.attributes.cq:showOnCreate": "{Boolean}true"
                }
            },
            {
                "_comment_": "All properties with type multifield and no content is actually set get different content",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.content))]..[?((@.field) && (@.type == \"multifield\" || @.type == \"hidden-multifield\") && (@.items[0].field) && !(@.template.html.content))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.content": "\t<div data-sly-list=\"$${${sightly}Model.@{field}}\">\n\t\t<p>@{label}: ${item}</p>\n\t</div>"
                }
            },
            {
                "_comment_": "All properties with type image  and no content is actually set get different content",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.content))]..[?((@.field) && (@.type == \"image\") && !(@.template.html.content))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.content": "\t<p>@{label}: <img src=\"$${${sightly}Model.@{field}.src}\"/></p>"
                }
            },
            {
                "_comment_": "Apply default values for properties for content not already set",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.content))]..[?((@.field) && (@.label) && !(@.template.html.content))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.content": "\t<p>@{label}: $${${sightly}Model.@{field}}</p>"
                }
            },
            {
                "_comment_": "Apply default values for properties for content not already set",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.content))]..[?((@.type == \"container\") && !(@.template.html.content))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.content": ""
                }
            },
            {
                "_comment_": "Apply default values for properties for content not already set",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.content))]..[?((@.field) && !(@.label) && !(@.type == \"container\") && !(@.template.html.content))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.content": "\t<p>$${${sightly}Model.@{field}}</p>"
                }
            },
            {
                "_comment_": "All properties with template.attribute",
                "baseJsonPath": "$.options.['properties','properties-shared','properties-global'][?(!(@.template.html.attribute))]..[?((@.field) && (@.template.html.isAttribute == true ) && !(@.template.html.attribute))]",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.template.html.attribute": " @{field}=\"$${${sightly}Model.@{field}}\""
                }
            }
        ],
        "placeholder-patterns": {
            "_comment_": "Finds all nodes with template values for resolving template variables (@{...})",
            "jsonPath": "$..template"
        },
        "collect-patterns": [
            {
                "_comment_": "After resolving the variables we need to collect the resolved texts, key and value are a jasonPath",
                "baseJsonPath": "$",
                "warnMissingPaths": false,
                "targetAttributes": {
                    "@.options.replaceValueMap.template-html-component": "$.options.template.html.component",
                    "@.options.replaceValueMap.template-html-content": "$.options['properties','properties-shared','properties-global']..[?(@.template.html.content)].template.html.content",
                    "@.options.replaceValueMap.template-html-attribute": "$.options['properties','properties-shared','properties-global']..[?(@.template.html.attribute)].template.html.attribute",
                    "@.options.replaceValueMap.template-html-bottom": "$.options.template.html.bottom",
                    "@.options.replaceValueMap.template-name": "$.name"
                }
            }
        ]
    }
}
